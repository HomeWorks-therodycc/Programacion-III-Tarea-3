@page "/Ejercicio2"

@using System.Net.Http;
@using System.Net.Http.Json;
@using Newtonsoft.Json;
@using System.Net;
@inject HttpClient Http;



<h3>Ejercicio_2</h3>
<br />
<h6>Programa que muestre la prediccion del clima actualizada para santo domingo (o su provincia), sin importar cuando se ejecute su aplicacion debe de mostrar estos datos. </h6>
<br />
<button class="btn btn-success form-control form-control-lg" type="button" @onclick="predecirClima">Ver prediccion del clima</button>
<br />
<br />
@if (tiempo != null)
{
    <div class="card mb-12 shadow-lg p-3 mb-5 bg-white rounded">
        <div class="row g-0">
            <div class="col-md-8 ">
                <div class="card-body">
                    <h5 class="list-group-item">@pais</h5>
                    <h5 class="list-group-item">@horalocal</h5>
                    <h5 class="list-group-item">@region</h5>
                    <h5 class="list-group-item">@conuntrr</h5>
                    <h5 class="list-group-item">@nombre</h5>
                    <h5 class="list-group-item">@temperatura Cº ~ @temperatura1 Fº</h5>
                </div>
            </div>
        </div>
    </div>
}



    @code {
        
        
        
        string resultado = "";
        string nombre;
        string region;
        string conuntrr;
        string horalocal;
        string pais;
        double temperatura;
        double temperatura1;


public class Location
    {
        public string name { get; set; }
        public string region { get; set; }
        public string country { get; set; }
        public double lat { get; set; }
        public double lon { get; set; }
        public string tz_id { get; set; }
        public int localtime_epoch { get; set; }
        public string localtime { get; set; }
    }

    public class Condition
    {
        public string text { get; set; }
        public string icon { get; set; }
        public int code { get; set; }
    }

    public class Current
    {
        public int last_updated_epoch { get; set; }
        public string last_updated { get; set; }
        public double temp_c { get; set; }
        public double temp_f { get; set; }
        public int is_day { get; set; }
        public Condition condition { get; set; }
        public double wind_mph { get; set; }
        public double wind_kph { get; set; }
        public int wind_degree { get; set; }
        public string wind_dir { get; set; }
        public double pressure_mb { get; set; }
        public double pressure_in { get; set; }
        public double precip_mm { get; set; }
        public double precip_in { get; set; }
        public int humidity { get; set; }
        public int cloud { get; set; }
        public double feelslike_c { get; set; }
        public double feelslike_f { get; set; }
        public double vis_km { get; set; }
        public double vis_miles { get; set; }
        public double uv { get; set; }
        public double gust_mph { get; set; }
        public double gust_kph { get; set; }
    }

    public class Root
    {
        public Location location { get; set; }
        public Current current { get; set; }
    }


    Root tiempo = null;

    async Task predecirClima()
    {

        var Api = "http://api.weatherapi.com/v1/current.json?key=b6eb62aaa40e404b98811312210902&q=Dominican%20Republic";
        WebClient web = new WebClient();
        var dt = web.DownloadString(Api);
        tiempo = JsonConvert.DeserializeObject<Root>(dt);

        nombre = tiempo.location.name;
        conuntrr = tiempo.location.country;
        region = tiempo.location.region;
        horalocal = tiempo.location.localtime;
        pais = tiempo.location.country;
        temperatura = tiempo.current.temp_c;
        temperatura1= tiempo.current.temp_f;
    } }